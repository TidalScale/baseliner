#!/usr/bin/env bash

print_usage() {
  echo "Usage: baseliner [-i inventory] [-o dir] [-f <conf>] [-m mode] [-e]"
  echo ""
  echo "Flags:"
  echo "  -i <inventory> inventory file passed to ansible (default: ./hosts)."
  echo "  -f <conf>      baseliner configuration file (default: ./config.yml)."
  echo "  -o <out-dir>   output directory (default: ./results)."
  echo "  -m <mode>      one of 'single-node' or 'parallel' (default: single-node)."
  echo "  -p <pretasks>  file containing pre-tasks (default: None)."
  echo "  -e             terminate execution on first failure (default: false)."
  exit $1
}

config_file="./config.yml"
inventory="./hosts"
results_dir="./results"
any_error_fatal="false"
stop_all="true"
mode="single-node"
failfast="false"
delay=60
pre_tasks_file=""

while getopts ":f:a:o:i:m:d:p:esh" o; do
  case "${o}" in
    f)
      config_file="${OPTARG}"
      ;;
    i)
      inventory="${OPTARG}"
      ;;
    o)
      results_dir="${OPTARG}"
      ;;
    m)
      mode="${OPTARG}"
      ;;
    d)
      delay="${OPTARG}"
      ;;
    p)
      pre_tasks_file="-e pre_tasks_file=${OPTARG}"
      ;;
    e)
      failfast="true"
      ;;
    s)
      stop_all="false"
      ;;
    h)
      print_usage 0
      ;;
    *)
      print_usage 1
      ;;
  esac
done

cat >ansible.cfg <<EOL
[defaults]
timeout = 1200
display_skipped_hosts = false
retry_files_enabled = false
host_key_checking = false
callback_whitelist = profile_tasks, timer
EOL

if [ -n "${ANSIBLE_ROLES_PATH}" ]; then
  echo "roles_path = ${ANSIBLE_ROLES_PATH}" >> ansible.cfg
fi

export ANSIBLE_LOG_PATH="${results_dir}/baseliner.log"

cat >playbook.yml <<EOL
- hosts: all
  roles:
  - baseliner
EOL

mkdir -p "${results_dir}"

echo '' > "$ANSIBLE_LOG_PATH"

ansible-playbook \
  -i "${inventory}" \
  -e @"${config_file}" \
  -e local_results_path="${results_dir}" \
  -e baseliner_execution_mode=$mode \
  -e stop_all="${stop_all}" \
  -e failfast="${failfast}" \
  -e test_wait_delay="${delay}" \
  $pre_tasks_file \
  ./playbook.yml

ansible_result=$?

rm -f ansible.cfg playbook.yml

exit $ansible_result
