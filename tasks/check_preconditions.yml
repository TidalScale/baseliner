- name: wait for guest to boot
  wait_for_connection:
    timeout: 600

- name: guest ping is up, wait for dhcp to come up
  pause:
    minutes: 1

- name: gather facts about guest
  setup:
    filter: ansible_*

- name: ensure expected variables are defined
  assert:
    that:
    - 'benchmarks is defined'
    - 'local_results_path is defined'

- name: set remote results path if not defined
  set_fact:
    remote_results_path: '/tmp/baseliner_output_{{ inventory_hostname_short }}'
  when: remote_results_path is not defined

- name: ensure results folder exists
  local_action:
    module: file
    path: '{{ local_results_path }}'
    state: directory
    mode: 0777
  run_once: true

- name: check that pre-tasks file exists
  local_action:
    module: stat
    path: '{{ pre_tasks_file }}'
  register: stat_result
  failed_when:
  - 'stat_result is not defined'
  - 'not stat_result.exists'
  when: 'pre_tasks_file is defined'
  run_once: true

- name: check that post-tasks file exists
  local_action:
    module: stat
    path: '{{ post_tasks_file }}'
  register: stat_result
  failed_when:
  - 'stat_result is not defined'
  - 'not stat_result.exists'
  when: 'post_tasks_file is defined'

- name: ensure docker-engine is installed
  apt:
    name: docker-engine
    update_cache: yes
    state: latest
  become: true
  when: 'check_docker_package | default(false)'

- name: install statically linked docker
  include_tasks: install-docker-static-binary.yml
  when: 'install_statically_linked_docker | default(false)'

- name: ensure the docker daemon is running
  service:
    name: docker
    state: started
  become: true
  when: 'check_docker_package | default(false)'

- name: stop any running container
  shell: "docker stop `docker ps -q`"
  ignore_errors: true
  when: (stop_all | bool) | default(true)

- name: remove containers to avoid name clashes
  shell: "docker rm `docker ps -qa`"
  ignore_errors: true
